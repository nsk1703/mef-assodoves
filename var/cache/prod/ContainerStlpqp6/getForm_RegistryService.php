<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRegistryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRegistry.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/FormExtensionInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/DependencyInjection/DependencyInjectionExtension.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/ResolvedFormTypeFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/ResolvedFormTypeFactory.php';

return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(['AppBundle\\Form\\ArticleDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ArticleDeleteType']) ? $this->services['AppBundle\\Form\\ArticleDeleteType'] : ($this->services['AppBundle\\Form\\ArticleDeleteType'] = new \AppBundle\Form\ArticleDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\ArticleMakeVisibleType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ArticleMakeVisibleType']) ? $this->services['AppBundle\\Form\\ArticleMakeVisibleType'] : ($this->services['AppBundle\\Form\\ArticleMakeVisibleType'] = new \AppBundle\Form\ArticleMakeVisibleType())) && false ?: '_'};
}, 'AppBundle\\Form\\ArticleSoftDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ArticleSoftDeleteType']) ? $this->services['AppBundle\\Form\\ArticleSoftDeleteType'] : ($this->services['AppBundle\\Form\\ArticleSoftDeleteType'] = new \AppBundle\Form\ArticleSoftDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\ArticleType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ArticleType']) ? $this->services['AppBundle\\Form\\ArticleType'] : ($this->services['AppBundle\\Form\\ArticleType'] = new \AppBundle\Form\ArticleType())) && false ?: '_'};
}, 'AppBundle\\Form\\BlogReviewType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\BlogReviewType']) ? $this->services['AppBundle\\Form\\BlogReviewType'] : ($this->services['AppBundle\\Form\\BlogReviewType'] = new \AppBundle\Form\BlogReviewType())) && false ?: '_'};
}, 'AppBundle\\Form\\CatalogueDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\CatalogueDeleteType']) ? $this->services['AppBundle\\Form\\CatalogueDeleteType'] : ($this->services['AppBundle\\Form\\CatalogueDeleteType'] = new \AppBundle\Form\CatalogueDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\CatalogueEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\CatalogueEditType']) ? $this->services['AppBundle\\Form\\CatalogueEditType'] : ($this->services['AppBundle\\Form\\CatalogueEditType'] = new \AppBundle\Form\CatalogueEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\CatalogueType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\CatalogueType']) ? $this->services['AppBundle\\Form\\CatalogueType'] : ($this->services['AppBundle\\Form\\CatalogueType'] = new \AppBundle\Form\CatalogueType())) && false ?: '_'};
}, 'AppBundle\\Form\\CauseDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\CauseDeleteType']) ? $this->services['AppBundle\\Form\\CauseDeleteType'] : ($this->services['AppBundle\\Form\\CauseDeleteType'] = new \AppBundle\Form\CauseDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\CauseType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\CauseType']) ? $this->services['AppBundle\\Form\\CauseType'] : ($this->services['AppBundle\\Form\\CauseType'] = new \AppBundle\Form\CauseType())) && false ?: '_'};
}, 'AppBundle\\Form\\ContributionOnlinePayType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ContributionOnlinePayType']) ? $this->services['AppBundle\\Form\\ContributionOnlinePayType'] : ($this->services['AppBundle\\Form\\ContributionOnlinePayType'] = new \AppBundle\Form\ContributionOnlinePayType())) && false ?: '_'};
}, 'AppBundle\\Form\\ContributionType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ContributionType']) ? $this->services['AppBundle\\Form\\ContributionType'] : ($this->services['AppBundle\\Form\\ContributionType'] = new \AppBundle\Form\ContributionType())) && false ?: '_'};
}, 'AppBundle\\Form\\DonationType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\DonationType']) ? $this->services['AppBundle\\Form\\DonationType'] : ($this->services['AppBundle\\Form\\DonationType'] = new \AppBundle\Form\DonationType())) && false ?: '_'};
}, 'AppBundle\\Form\\EmailCatchType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\EmailCatchType']) ? $this->services['AppBundle\\Form\\EmailCatchType'] : ($this->services['AppBundle\\Form\\EmailCatchType'] = new \AppBundle\Form\EmailCatchType())) && false ?: '_'};
}, 'AppBundle\\Form\\ImageEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ImageEditType']) ? $this->services['AppBundle\\Form\\ImageEditType'] : ($this->services['AppBundle\\Form\\ImageEditType'] = new \AppBundle\Form\ImageEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\ImageType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ImageType']) ? $this->services['AppBundle\\Form\\ImageType'] : ($this->services['AppBundle\\Form\\ImageType'] = new \AppBundle\Form\ImageType())) && false ?: '_'};
}, 'AppBundle\\Form\\MediaDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\MediaDeleteType']) ? $this->services['AppBundle\\Form\\MediaDeleteType'] : ($this->services['AppBundle\\Form\\MediaDeleteType'] = new \AppBundle\Form\MediaDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\MediaType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\MediaType']) ? $this->services['AppBundle\\Form\\MediaType'] : ($this->services['AppBundle\\Form\\MediaType'] = new \AppBundle\Form\MediaType())) && false ?: '_'};
}, 'AppBundle\\Form\\MemberDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\MemberDeleteType']) ? $this->services['AppBundle\\Form\\MemberDeleteType'] : ($this->services['AppBundle\\Form\\MemberDeleteType'] = new \AppBundle\Form\MemberDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\MemberEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\MemberEditType']) ? $this->services['AppBundle\\Form\\MemberEditType'] : ($this->services['AppBundle\\Form\\MemberEditType'] = new \AppBundle\Form\MemberEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\MemberType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\MemberType']) ? $this->services['AppBundle\\Form\\MemberType'] : ($this->services['AppBundle\\Form\\MemberType'] = new \AppBundle\Form\MemberType())) && false ?: '_'};
}, 'AppBundle\\Form\\PageType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\PageType']) ? $this->services['AppBundle\\Form\\PageType'] : ($this->services['AppBundle\\Form\\PageType'] = new \AppBundle\Form\PageType())) && false ?: '_'};
}, 'AppBundle\\Form\\PayPalType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\PayPalType']) ? $this->services['AppBundle\\Form\\PayPalType'] : ($this->services['AppBundle\\Form\\PayPalType'] = new \AppBundle\Form\PayPalType())) && false ?: '_'};
}, 'AppBundle\\Form\\ProjectCategoryDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ProjectCategoryDeleteType']) ? $this->services['AppBundle\\Form\\ProjectCategoryDeleteType'] : ($this->services['AppBundle\\Form\\ProjectCategoryDeleteType'] = new \AppBundle\Form\ProjectCategoryDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\ProjectCategoryEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ProjectCategoryEditType']) ? $this->services['AppBundle\\Form\\ProjectCategoryEditType'] : ($this->services['AppBundle\\Form\\ProjectCategoryEditType'] = new \AppBundle\Form\ProjectCategoryEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\ProjectCategoryType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ProjectCategoryType']) ? $this->services['AppBundle\\Form\\ProjectCategoryType'] : ($this->services['AppBundle\\Form\\ProjectCategoryType'] = new \AppBundle\Form\ProjectCategoryType())) && false ?: '_'};
}, 'AppBundle\\Form\\ReviewDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ReviewDeleteType']) ? $this->services['AppBundle\\Form\\ReviewDeleteType'] : ($this->services['AppBundle\\Form\\ReviewDeleteType'] = new \AppBundle\Form\ReviewDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\ReviewEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ReviewEditType']) ? $this->services['AppBundle\\Form\\ReviewEditType'] : ($this->services['AppBundle\\Form\\ReviewEditType'] = new \AppBundle\Form\ReviewEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\ReviewType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\ReviewType']) ? $this->services['AppBundle\\Form\\ReviewType'] : ($this->services['AppBundle\\Form\\ReviewType'] = new \AppBundle\Form\ReviewType())) && false ?: '_'};
}, 'AppBundle\\Form\\StatusDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\StatusDeleteType']) ? $this->services['AppBundle\\Form\\StatusDeleteType'] : ($this->services['AppBundle\\Form\\StatusDeleteType'] = new \AppBundle\Form\StatusDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\StatusEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\StatusEditType']) ? $this->services['AppBundle\\Form\\StatusEditType'] : ($this->services['AppBundle\\Form\\StatusEditType'] = new \AppBundle\Form\StatusEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\StatusType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\StatusType']) ? $this->services['AppBundle\\Form\\StatusType'] : ($this->services['AppBundle\\Form\\StatusType'] = new \AppBundle\Form\StatusType())) && false ?: '_'};
}, 'AppBundle\\Form\\StripePayType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\StripePayType']) ? $this->services['AppBundle\\Form\\StripePayType'] : ($this->services['AppBundle\\Form\\StripePayType'] = new \AppBundle\Form\StripePayType())) && false ?: '_'};
}, 'AppBundle\\Form\\TagDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\TagDeleteType']) ? $this->services['AppBundle\\Form\\TagDeleteType'] : ($this->services['AppBundle\\Form\\TagDeleteType'] = new \AppBundle\Form\TagDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\TagEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\TagEditType']) ? $this->services['AppBundle\\Form\\TagEditType'] : ($this->services['AppBundle\\Form\\TagEditType'] = new \AppBundle\Form\TagEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\TagType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\TagType']) ? $this->services['AppBundle\\Form\\TagType'] : ($this->services['AppBundle\\Form\\TagType'] = new \AppBundle\Form\TagType())) && false ?: '_'};
}, 'AppBundle\\Form\\VolonteerDeleteType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\VolonteerDeleteType']) ? $this->services['AppBundle\\Form\\VolonteerDeleteType'] : ($this->services['AppBundle\\Form\\VolonteerDeleteType'] = new \AppBundle\Form\VolonteerDeleteType())) && false ?: '_'};
}, 'AppBundle\\Form\\VolonteerEditAdminType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\VolonteerEditAdminType']) ? $this->services['AppBundle\\Form\\VolonteerEditAdminType'] : ($this->services['AppBundle\\Form\\VolonteerEditAdminType'] = new \AppBundle\Form\VolonteerEditAdminType())) && false ?: '_'};
}, 'AppBundle\\Form\\VolonteerEditType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\VolonteerEditType']) ? $this->services['AppBundle\\Form\\VolonteerEditType'] : ($this->services['AppBundle\\Form\\VolonteerEditType'] = new \AppBundle\Form\VolonteerEditType())) && false ?: '_'};
}, 'AppBundle\\Form\\VolonteerType' => function () {
    return ${($_ = isset($this->services['AppBundle\\Form\\VolonteerType']) ? $this->services['AppBundle\\Form\\VolonteerType'] : ($this->services['AppBundle\\Form\\VolonteerType'] = new \AppBundle\Form\VolonteerType())) && false ?: '_'};
}, 'FOS\\UserBundle\\Form\\Type\\ChangePasswordFormType' => function () {
    return ${($_ = isset($this->services['fos_user.change_password.form.type']) ? $this->services['fos_user.change_password.form.type'] : ($this->services['fos_user.change_password.form.type'] = new \FOS\UserBundle\Form\Type\ChangePasswordFormType('User\\UserBundle\\Entity\\User'))) && false ?: '_'};
}, 'FOS\\UserBundle\\Form\\Type\\ProfileFormType' => function () {
    return ${($_ = isset($this->services['fos_user.profile.form.type']) ? $this->services['fos_user.profile.form.type'] : ($this->services['fos_user.profile.form.type'] = new \FOS\UserBundle\Form\Type\ProfileFormType('User\\UserBundle\\Entity\\User'))) && false ?: '_'};
}, 'FOS\\UserBundle\\Form\\Type\\RegistrationFormType' => function () {
    return ${($_ = isset($this->services['fos_user.registration.form.type']) ? $this->services['fos_user.registration.form.type'] : ($this->services['fos_user.registration.form.type'] = new \FOS\UserBundle\Form\Type\RegistrationFormType('User\\UserBundle\\Entity\\User'))) && false ?: '_'};
}, 'FOS\\UserBundle\\Form\\Type\\ResettingFormType' => function () {
    return ${($_ = isset($this->services['fos_user.resetting.form.type']) ? $this->services['fos_user.resetting.form.type'] : ($this->services['fos_user.resetting.form.type'] = new \FOS\UserBundle\Form\Type\ResettingFormType('User\\UserBundle\\Entity\\User'))) && false ?: '_'};
}, 'FOS\\UserBundle\\Form\\Type\\UsernameFormType' => function () {
    return ${($_ = isset($this->services['fos_user.username_form_type']) ? $this->services['fos_user.username_form_type'] : $this->load('getFosUser_UsernameFormTypeService.php')) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
    return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->load('getForm_Type_EntityService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
    return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->load('getForm_Type_ChoiceService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => function () {
    return ${($_ = isset($this->services['form.type.file']) ? $this->services['form.type.file'] : $this->load('getForm_Type_FileService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
    return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->load('getForm_Type_FormService.php')) && false ?: '_'};
}]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.form.transformation_failure_handling']) ? $this->services['form.type_extension.form.transformation_failure_handling'] : $this->load('getForm_TypeExtension_Form_TransformationFailureHandlingService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->load('getForm_TypeExtension_Form_HttpFoundationService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->load('getForm_TypeExtension_Form_ValidatorService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->load('getForm_TypeExtension_Upload_ValidatorService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->load('getForm_TypeExtension_CsrfService.php')) && false ?: '_'};
}, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : ($this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension())) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : ($this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension())) && false ?: '_'};
}, 1)], new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->load('getForm_TypeGuesser_ValidatorService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->load('getForm_TypeGuesser_DoctrineService.php')) && false ?: '_'};
}, 2), NULL)], ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : ($this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory())) && false ?: '_'});
